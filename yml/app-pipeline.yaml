apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: conexp-pipeline
spec:
  resources:
    - name: source-repo
      type: git
    - name: web-image-source
      type: image
    - name: api-image-source
      type: image
    - name: fn-image-source
      type: image
  params:
    - name: deployment-namespace
      type: string
      description: namespace to deploy the yaml
      default: conexp-mvp
    - name: fn-deployment-namespace
      type: string
      description: namespace to deploy the function yaml
      default: openfaas-fn      
  tasks:
    - name: build-docker-image-web
      taskRef:
        name: build-docker-image
      runAfter:
        - build-docker-image-fn        
      params:
        - name: pathToDockerFile
          value: Contoso.Expenses.Web/Dockerfile
        - name: pathToContext
          value: /workspace/source-repo/src
      resources:
        inputs:
          - name: source-repo
            resource: source-repo
        outputs:
          - name: image-source
            resource: web-image-source
    - name: build-docker-image-api
      taskRef:
        name: build-docker-image
      runAfter:
        - build-docker-image-web
      params:
        - name: pathToDockerFile
          value: Dockerfile
        - name: pathToContext
          value: /workspace/source-repo/src/Contoso.Expenses.API
      resources:
        inputs:
          - name: source-repo
            resource: source-repo
        outputs:
          - name: image-source
            resource: api-image-source
    - name: build-docker-image-fn
      taskRef:
        name: build-docker-image
      params:
        - name: pathToDockerFile
          value: Contoso.Expenses.OpenFaaS/Dockerfile
        - name: pathToContext
          value: /workspace/source-repo/src
      resources:
        inputs:
          - name: source-repo
            resource: source-repo
        outputs:
          - name: image-source
            resource: fn-image-source
    - name: deploy-using-kubectl-web
      taskRef:
        name: deploy-using-kubectl
      params:
        - name: pathToYamlFile
          value: frontend.yaml
        - name: deployment-namespace
          value: $(params.deployment-namespace)
      resources:
        inputs:
          - name: source-repo
            resource: source-repo
          - name: image-source
            resource: web-image-source
            from:
              - build-docker-image-web
    - name: deploy-using-kubectl-api
      taskRef:
        name: deploy-using-kubectl
      params:
        - name: pathToYamlFile
          value: backend.yaml
        - name: deployment-namespace
          value: $(params.deployment-namespace)
      resources:
        inputs:
          - name: source-repo
            resource: source-repo
          - name: image-source
            resource: api-image-source
            from:
              - build-docker-image-api
    - name: deploy-using-kubectl-fn
      taskRef:
        name: deploy-using-kubectl
      params:
        - name: pathToYamlFile
          value: function.yaml
        - name: deployment-namespace
          value: $(params.fn-deployment-namespace)
      resources:
        inputs:
          - name: source-repo
            resource: source-repo
          - name: image-source
            resource: fn-image-source
            from:
              - build-docker-image-fn            
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-docker-image
spec:
  inputs:
    resources:
      - name: source-repo
        type: git
    params:
      - name: pathToDockerFile
        description: Path to Dockerfile
        default: /workspace/source-repo/src/Dockerfile
      - name: pathToContext
        description: The build context used by Kaniko
        default: /workspace/source-repo/src
  outputs:
    resources:
      - name: image-source
        type: image
  steps:
    - name: build-and-push
      image: gcr.io/kaniko-project/executor:v0.15.0
      env:
        - name: "DOCKER_CONFIG"
          value: "/builder/home/.docker/"
      command:
        - /kaniko/executor
      args:
        - --dockerfile=$(inputs.params.pathToDockerFile)
        - --destination=$(outputs.resources.image-source.url)
        - --context=$(inputs.params.pathToContext)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: deploy-using-kubectl
spec:
  inputs:
    resources:
      - name: source-repo
        type: git
      - name: image-source
        type: image
    params:
      - name: pathToYamlFile
        description: The path to the yaml file to deploy within the git source
      - name: deployment-namespace
        description: The namespace to deploy to
  steps:
    - name: update-yaml
      image: alpine
      command: ["sed"]
      args:
        - "-i"
        - "-e"
        - "s|__IMAGE__|$(inputs.resources.image-source.url)|g;s|__SENDGRIDAPIKEY__|{SENDGRIDAPIKEYRELACE}|g;s|__APPHOSTNAME__|{APPHOSTNAMEREPLACE}|g;s|__APIDBCONSTR__|server=mysql.mysql.svc.cluster.local;Port=3306;database=conexpapi;user=ftacncf;password=FTA@CNCF0n@zure3;|g;s|__WEBDBCONSTR__|server=mysql.mysql.svc.cluster.local;Port=3306;database=conexpweb;user=ftacncf;password=FTA@CNCF0n@zure3;|g;s|__APIURL__|http://backend-svc.conexp-mvp.svc.cluster.local:80|g;"
        - "/workspace/source-repo/src/$(inputs.params.pathToYamlFile)"
    - name: print-yaml
      image: alpine
      command: ["cat"]
      args:
        - "/workspace/source-repo/src/$(inputs.params.pathToYamlFile)"
    - name: run-kubectl
      image: lachlanevenson/k8s-kubectl
      command: ["kubectl"]
      args:
        - "apply"
        - "-f"
        - "/workspace/source-repo/src/$(inputs.params.pathToYamlFile)"
        - "-n"
        - "$(inputs.params.deployment-namespace)"